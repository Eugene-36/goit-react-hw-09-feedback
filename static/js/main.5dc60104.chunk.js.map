{"version":3,"sources":["components/FeedBack/FeedBack.module.css","components/FeedBack/FeedBack.js","components/FeedBack/Statistics.js","components/FeedBack/SectionTitle.js","components/FeedBack/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","onLeaveFeedback","buttons","b","Object","keys","map","button","id","type","onClick","FeedBack","total","positivePercentage","Section","children","title","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","className","options","e","textContent","target","console","log","toLowerCase","prevGood","prevBad","prevNeutral","warn","v","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,kBAAoB,oCAAoC,eAAiB,mC,4GCoBhHC,EAnBI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,gBAClCC,EAAU,CAAEJ,OAAMC,UAASC,OAC3BG,EAAIC,OAAOC,KAAKH,GAEtB,OACE,kCACE,8BACGC,EAAEG,KAAI,SAACC,EAAQC,GACd,OACE,wBAAiBC,KAAK,SAASC,QAAST,EAAxC,SACGM,GADUC,WCMVG,EAfE,SAAC,GAAuD,IAArDb,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKY,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACE,gCACE,4CACA,+BACE,wCAAWf,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYY,KACZ,uDAA0BC,EAA1B,cCAOC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,gCACE,6BAAKA,IACJD,MCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,+BAAOA,OCIE,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBtB,EADqB,KACfuB,EADe,OAEED,mBAAS,GAFX,mBAErBrB,EAFqB,KAEZuB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBpB,EAHqB,KAGhBuB,EAHgB,KA2BtBC,EAAqB,WACzB,OAAO1B,EAAOE,EAAMD,GAOtB,OACE,sBAAK0B,UAAU,MAAf,UACE,cAAC,EAAD,CAAST,MAAM,6BAAf,SACE,cAAC,EAAD,CACEU,QAAyB1B,EACzBC,gBAnCc,SAAC0B,GAAO,IACpBC,EAAgBD,EAAEE,OAAlBD,YAGR,OADAE,QAAQC,IAAIH,GACJA,EAAYI,eAClB,IAAK,OACHX,GAAQ,SAACY,GAAD,OAAcA,EAAW,KACjC,MAEF,IAAK,MACHV,GAAO,SAACW,GAAD,OAAaA,EAAU,KAC9B,MAEF,IAAK,UACHZ,GAAW,SAACa,GAAD,OAAiBA,EAAc,KAC1C,MAEF,QACEL,QAAQM,KAAK,eAqBf,cAAC,EAAD,CAASpB,MAAM,GAAf,SAC4B,IAAzBQ,IACC,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLY,MAAOY,IACPX,mBAtB8B,WACtC,IAAIwB,EAAKvC,GAAQA,EAAOE,EAAMD,GAAY,IAC1C,OAAOuC,KAAKC,MAAMF,GAoBUG,UCzDhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5dc60104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"FeedBack_Counter__E_0L_\",\"Counter__controls\":\"FeedBack_Counter__controls__2kvcG\",\"Counter__value\":\"FeedBack_Counter__value__3gLhJ\"};","import s from \"./FeedBack.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, onLeaveFeedback }) => {\r\n  const buttons = { good, neutral, bad };\r\n  const b = Object.keys(buttons);\r\n\r\n  return (\r\n    <section>\r\n      <div>\r\n        {b.map((button, id) => {\r\n          return (\r\n            <button key={id} type=\"button\" onClick={onLeaveFeedback}>\r\n              {button}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n//  class Statistics extends Component {\r\n//   render() {\r\n//     return <h1>Fdddd</h1>;\r\n//   }\r\n// }\r\n\r\n// {\r\n//   /* <li>\r\n//               <p>\r\n//                 Positive feedback:\r\n//                 {() => {\r\n//                   this.countTotalFeedback();\r\n//                 }}\r\n//               </p>\r\n//               </li> */\r\n// }\r\n","import React from \"react\";\r\n\r\nconst FeedBack = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive percentage: {positivePercentage}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedBack;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <span>{message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n//todo: Второе дз\r\nimport FeedbackOptions from \"./components/FeedBack/FeedBack\";\r\nimport Statistics from \"./components/FeedBack/Statistics\";\r\nimport Section from \"./components/FeedBack/SectionTitle\";\r\nimport Notification from \"./components/FeedBack/Notification\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countFeedback = (e) => {\r\n    const { textContent } = e.target;\r\n\r\n    console.log(textContent);\r\n    switch (textContent.toLowerCase()) {\r\n      case \"good\":\r\n        setGood((prevGood) => prevGood + 1);\r\n        break;\r\n\r\n      case \"bad\":\r\n        setBad((prevBad) => prevBad + 1);\r\n        break;\r\n\r\n      case \"neutral\":\r\n        setNeutral((prevNeutral) => prevNeutral + 1);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"Error\");\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + bad + neutral;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    let v = (good / (good + bad + neutral)) * 100;\r\n    return Math.round(v);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Please leave your feedback\">\r\n        <FeedbackOptions\r\n          options={(good, neutral, bad)}\r\n          onLeaveFeedback={countFeedback}\r\n        />\r\n      </Section>\r\n\r\n      <Section title=\"\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n//   countFeedback = (e) => {\r\n//     this.setState((prevState) => ({\r\n//       ...prevState,\r\n//       ...{ [e.target.textContent]: prevState[e.target.textContent] + 1 },\r\n//     }));\r\n//   };\r\n\r\n//   countTotalFeedback = () => {\r\n//     const { good, bad, neutral } = this.state;\r\n//     return good + bad + neutral;\r\n//   };\r\n//   countPositiveFeedbackPercentage() {\r\n//     const { good, bad, neutral } = this.state;\r\n//     let v = (good / (good + bad + neutral)) * 100;\r\n//     return Math.round(v);\r\n//   }\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Section title=\"Please leave your feedback\">\r\n//           <FeedbackOptions\r\n//             options={(good, neutral, bad)}\r\n//             onLeaveFeedback={this.countFeedback}\r\n//           />\r\n//         </Section>\r\n\r\n//         <Section title=\"\">\r\n//           {this.countTotalFeedback() === 0 ? (\r\n//             <Notification message=\"No feedback given\" />\r\n//           ) : (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={this.countTotalFeedback()}\r\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\r\n//             />\r\n//           )}\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}